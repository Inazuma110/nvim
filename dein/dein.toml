# package manager
[[plugins]]
repo = 'Shougo/dein.vim'

# background trance
[[plugins]]
repo = 'Inazuma110/air.vim'

# lint
# [[plugins]]
# repo = 'w0rp/ale'

# win resize
[[plugins]]
repo = 'simeji/winresizer'
hook_add = '''
  " window resize
  let g:winresizer_vert_resize = 1
  let g:winresizer_horiz_resize = 1
'''
# toml highlight
[[plugins]]
repo = 'cespare/vim-toml'


# project tree
[[plugins]]
repo = 'scrooloose/nerdtree'

# filetype
[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'Shougo/vimfiler.vim'

# git
[[plugins]]
repo = 'tpope/vim-fugitive'

# git
[[plugins]]
repo = 'airblade/vim-gitgutter'
hook_add = '''
  let g:gitgutter_sign_added = '✚'
  let g:gitgutter_sign_modified = '➜'
  let g:gitgutter_sign_removed = '✘'
'''

# file icons
[[plugins]]
repo = 'ryanoasis/vim-devicons'
hook_add = '''
  let g:WebDevIconsUnicodeDecorateFolderNodes = 1
  call denite#custom#source('file,file/rec,file/mru,file/old,file/point', 'converters', ['devicons_denite_converter'])
'''


[[plugins]]
repo = 'easymotion/vim-easymotion'


[[plugins]]
repo = 'vim-scripts/fcitx.vim'

# colorschema
[[plugins]]
repo =  'git@github.com:jacoborus/tender.vim.git'
hook_add = '''
  au ColorScheme * highlight LineNr ctermfg=10
  au VimEnter * nested colorscheme tender
'''

# () highlight
[[plugins]]
repo = 'luochen1990/rainbow'
hook_add = 'let g:rainbow_active = 1'

[[plugins]]
repo = 'tpope/vim-surround'

# commentout
[[plugins]]
repo = 'tyru/caw.vim'

[[plugins]]
repo = 'junegunn/vim-easy-align'
hook_add = '''
  xmap ga <Plug>(EasyAlign)
  nmap ga <Plug>(EasyAlign)
'''

# indent highlight
[[plugins]]
repo = 'git@github.com:Yggdroot/indentLine.git'
hook_add = '''
  let g:indentLine_char = '▏'
  let g:indentLine_first_char = '▏'
  " let g:indentLine_showFirstIndentLevel = -1
'''

# execute script
[[plugins]]
repo = 'git@github.com:thinca/vim-quickrun.git'

# highlight command f
[[plugins]]
repo = 'git@github.com:deris/vim-shot-f.git'


[[plugins]]
repo = 'git@github.com:kana/vim-operator-user.git'

# yank highlight
[[plugins]]
repo = 'git@github.com:haya14busa/vim-operator-flashy.git'
hook_add = '''
  map y <Plug>(operator-flashy)
  nmap Y <Plug>(operator-flashy)$
'''

# syntax highlight json
[[plugins]]
repo =  'elzr/vim-json'
hook_add = '''
  let g:vim_json_syntax_conceal = 0
'''

# [[plugins]]
# repo = 'git@github.com:Shougo/defx.nvim.git'

# open browser from vim
[[plugins]]
repo = 'git@github.com:tyru/open-browser.vim.git'

# presen
[[plugins]]
repo = 'git@github.com:thinca/vim-showtime.git'
hook_add = '''
  function! s:MyShowtimeStart() abort
    ShowtimeStart
    IndentLinesDisable
  endfunction

  command! InazumaShowtimeStart call s:MyShowtimeStart()
'''

[[plugins]]
repo = 'git@github.com:majutsushi/tagbar.git'

# lsp
[[plugins]]
repo = 'autozimu/LanguageClient-neovim'
build = 'bash install.sh'
rev = 'next'
hook_add = '''
    " set completefunc=LanguageClient#complete
    let s:node = empty($XDG_CONFIG_HOME) ? expand('$HOME/.config') : $XDG_CONFIG_HOME
    let g:LanguageClient_serverCommands = {
        \ 'c': ['clangd', '-compile-commands-dir=' . getcwd() . '/build'],
        "\ 'cpp': ['clangd', '-compile-commands-dir=' . getcwd() . '/build'],
        \ 'cpp': ['clangd'],
        \ 'python': ['pyls'],
    \ }
    " not stop completion $ & /
    set hidden
    set signcolumn=yes
    let g:LanguageClient_hoverPreview = "Never"
    nnoremap <F5> :call LanguageClient_contextMenu()<CR>
    " Or map each action separately
    nnoremap <silent> K :call LanguageClient#textDocument_hover()<CR>
    nnoremap <silent> gd :call LanguageClient#textDocument_definition()<CR>
    nnoremap <silent> <F2> :call LanguageClient#textDocument_rename()<CR>
    command! LSPFormat :call LanguageClient#textDocument_formatting()
'''

# nyancat
# [[plugins]]
# repo = 'git@github.com:mattn/vim-nyancat.git'

